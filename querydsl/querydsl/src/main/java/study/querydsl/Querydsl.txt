===== 기본 Q-Type 활용하기 ======

Q클래스 인스턴스를 사용하는 2가지 방법.
1) 별칭 직접 지정하기
QMember qMember = new QMember("m");

2) 기본 인스턴스 사용하기
QMember qMember = QMember.member;


============

<entityManager와 동시성 문제 관련 좋은 QnA>
https://www.inflearn.com/questions/158967

@RequiredArgsConstructor를 통해 생성자 만들었음
-> 스프링은 생성자가 1개이면 자동으로 @Autowired 적용
-> EntityManager가 생성자를 통해서 주입
-> private final EntityManager em;에 주입됨.
-> 이때, 실제 EntityManager를 주입하는 것이 아니라 가짜 프록시 객체인
EntityManager를 주입해두고,
실제 호출시점에 해당 db 트랜잭션과 관련된 실제 entityManager를 호출해줌.
-> 트랜잭션별로 나누어지기 때문에 동시성 문제를 고려할 필요가 없음.

========================

<fetch join의 projection)
-> fetchjoin은 sql의 조인과 db상 조인 쿼리가 나가는 것은 동일하지만, 엔티티 입장에서 엔티티 객체 그래프를 조회할 때 사용하는 기능.
-> 엔티티를 온전히 조회할 수 있어야 하기 때문에,
fetch join은 엔티티의 특정 부분을 projection(select 절에서 선택)하는 것이 불가능!

그래서 join만 사용하면 필요한 데이터를 찍어서 projection할 수 있지만,
fetch join을 사용하면 필요한 데이터를 찍어서 projection하는 것이 불가능...!
